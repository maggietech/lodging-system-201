service: () -> {
    createGuest: (record {name:text; email:text; phone:text}) -> (variant {Ok:record {id:text; "principal":principal; name:text; email:text; phone:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    createHouse: (record {name:text; description:text; address:text}) -> (variant {Ok:record {id:text; name:text; description:text; address:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    createReservation: (record {room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) -> (variant {Ok:record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    createRoom: (record {price_per_night:text; house_id:text; room_number:text; capacity:text}) -> (variant {Ok:record {id:text; is_booked:bool; price_per_night:text; reservation_id:opt text; house_id:text; room_number:text; capacity:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    endReservation: (text) -> (variant {Ok:record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    getGuest: (text) -> (variant {Ok:record {id:text; "principal":principal; name:text; email:text; phone:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}}) query;
    getGuests: () -> (vec record {id:text; "principal":principal; name:text; email:text; phone:text}) query;
    getHouse: (text) -> (variant {Ok:record {id:text; name:text; description:text; address:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}}) query;
    getHouses: () -> (vec record {id:text; name:text; description:text; address:text}) query;
    getReservation: (text) -> (variant {Ok:record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}}) query;
    getReservations: () -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByCheckInDate: (text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByCheckOutDate: (text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByGuestId: (text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByHouseId: (text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByHouseIdAndCheckInDate: (text, text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByHouseIdAndCheckOutDate: (text, text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getReservationsByRoomId: (text) -> (vec record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}) query;
    getRoom: (text) -> (variant {Ok:record {id:text; is_booked:bool; price_per_night:text; reservation_id:opt text; house_id:text; room_number:text; capacity:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}}) query;
    getRooms: () -> (vec record {id:text; is_booked:bool; price_per_night:text; reservation_id:opt text; house_id:text; room_number:text; capacity:text}) query;
    searchHouse: (text) -> (vec record {id:text; name:text; description:text; address:text}) query;
    updateGuest: (text, record {name:text; email:text; phone:text}) -> (variant {Ok:record {id:text; "principal":principal; name:text; email:text; phone:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    updateHouse: (text, record {name:text; description:text; address:text}) -> (variant {Ok:record {id:text; name:text; description:text; address:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    updateReservation: (text, record {check_out_date:nat; check_in_date:nat}) -> (variant {Ok:record {id:text; room_id:text; check_out_date:text; check_in_date:text; house_id:text; guest_id:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
    updateRoom: (text, record {price_per_night:text; house_id:text; room_number:text; capacity:text}) -> (variant {Ok:record {id:text; is_booked:bool; price_per_night:text; reservation_id:opt text; house_id:text; room_number:text; capacity:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotAuthorized:text; PaymentCompleted:text}});
}
